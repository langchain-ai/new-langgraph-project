[project]
name = "sappington-agent" 
version = "0.0.1"
description = "Starter template for making a new agent LangGraph."
authors = [
    { name = "William Fu-Hinthorn", email = "13333726+hinthornw@users.noreply.github.com" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
dependencies = [
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "appnope==0.1.4",
    "asttokens==3.0.0",
    "blockbuster==1.5.25",
    "certifi==2025.7.14",
    "cffi==1.17.1",
    "charset-normalizer==3.4.2",
    "click==8.2.1",
    "cloudpickle==3.1.1",
    "comm==0.2.3",
    "cryptography==44.0.3",
    "debugpy==1.8.15",
    "decorator==5.2.1",
    "distro==1.9.0",
    "executing==2.2.0",
    "forbiddenfruit==0.1.4",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "httpx==0.28.1",
    "idna==3.10",
    "ipykernel==6.30.0",
    "ipython==9.4.0",
    "ipython_pygments_lexers==1.1.1",
    "jedi==0.19.2",
    "jiter==0.10.0",
    "jsonpatch==1.33",
    "jsonpointer==3.0.0",
    "jsonschema_rs==0.29.1",
    "jupyter_client==8.6.3",
    "jupyter_core==5.8.1",
    "langchain==0.3.27",
    "langchain-core==0.3.72",
    "langchain-openai==0.3.28",
    "langchain-community==0.3.27",
    "langchain-text-splitters==0.3.9",
    "langgraph==0.6.1",
    "langgraph-api==0.2.110",
    "langgraph-checkpoint==2.1.1",
    "langgraph-cli==0.3.6",
    "langgraph-prebuilt==0.6.1",
    "langgraph-runtime-inmem==0.6.5",
    "langgraph-sdk==0.2.0",
    "langsmith==0.4.8",
    "matplotlib-inline==0.1.7",
    "nest-asyncio==1.6.0",
    "openai==1.97.1",
    "orjson==3.10.16",
    "ormsgpack==1.10.0",
    "packaging==25.0",
    "parso==0.8.4",
    "pexpect==4.9.0",
    "platformdirs==4.3.8",
    "prompt_toolkit==3.0.51",
    "psutil==7.0.0",
    "ptyprocess==0.7.0",
    "pure_eval==0.2.3",
    "pycparser==2.22",
    "pydantic==2.11.7",
    "pydantic_core==2.33.2",
    "Pygments==2.19.2",
    "PyJWT==2.10.1",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.1",
    "PyYAML==6.0.2",
    "pyzmq==27.0.0",
    "regex==2025.7.31",
    "requests==2.32.4",
    "requests-toolbelt==1.0.0",
    "six==1.17.0",
    "sniffio==1.3.1",
    "SQLAlchemy==2.0.42",
    "sse-starlette==2.1.3",
    "stack-data==0.6.3",
    "starlette==0.47.2",
    "structlog==25.4.0",
    "tenacity==9.1.2",
    "tiktoken==0.9.0",
    "tornado==6.5.1",
    "tqdm==4.67.1",
    "traitlets==5.14.3",
    "truststore==0.10.3",
    "typing-inspection==0.4.1",
    "typing_extensions==4.14.1",
    "urllib3==2.5.0",
    "uvicorn==0.35.0",
    "watchfiles==1.1.0",
    "wcwidth==0.2.13",
    "xxhash==3.5.0",
    "zstandard==0.23.0"
]

[project.optional-dependencies]
dev = ["mypy>=1.11.1", "ruff>=0.6.1"]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["langgraph.templates.agent", "agent"]
[tool.setuptools.package-dir]
"langgraph.templates.agent" = "src/agent"
"agent" = "src/agent"


[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
dev = [
    "anyio>=4.7.0",
    "langgraph-cli[inmem]>=0.2.8",
    "mypy>=1.13.0",
    "pytest>=8.3.5",
    "ruff>=0.8.2",
]
